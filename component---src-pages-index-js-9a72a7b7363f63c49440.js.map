{"version":3,"sources":["webpack:///./src/components/GoalChart.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Bio.js"],"names":["GoalChart","render","posts","this","props","colors","newPosts","_","sortBy","o","date","map","post","newPost","dateMoment","moment","dateUnix","unix","bedtimeMoment","bedtime","bedtimeUnix","bedtimeSeconds","diff","eveningbrushstreak","morningbrushstreak","exercisedstreak","forEach","i","yesterdaysEveningBrushStreak","yesterdaysMorningBrushStreak","yesterdaysexercisedstreak","eveningbrush","morningbrush","exercised","react_default","a","createElement","LineChart","width","height","margin","top","right","bottom","left","data","XAxis","dataKey","tickFormatter","unixTime","format","Tooltip","Legend","verticalAlign","YAxis","yAxisId","orientation","name","utc","stroke","domain","Line","type","React","Component","BlogIndex","siteTitle","site","siteMetadata","title","allMarkdownRemark","edges","chartData","node","frontmatter","Layout","location","seo","keywords","Bio","components_GoalChart","_ref","fields","slug","key","style","marginBottom","rhythm","gatsby_browser_entry","boxShadow","to","watergoal","avoidedalchohol","dangerouslySetInnerHTML","__html","excerpt","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","header","_this$props","react__WEBPACK_IMPORTED_MODULE_2___default","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","href","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","bioQuery","_data$site$siteMetada","social","display","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","_public_static_d_4007731267_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-index-js-9a72a7b7363f63c49440.js","sourcesContent":["import { \n    LineChart,   \n    XAxis,\n    YAxis,\n    Legend,\n    Line,\n    Tooltip \n} from 'recharts';\nimport React from 'react'\nimport moment from 'moment'\nimport _ from 'lodash'\n\nclass GoalChart extends React.Component {\n\n\n    render() {\n        \n      const { posts } = this.props\n      const colors = [\n          'red',\n          'blue',\n          'turquoise',\n          'green',\n      ]\n\n      let newPosts = _.sortBy(posts, [function(o) { return o.date; }]);\n      newPosts = newPosts.map(post=>{\n          const newPost = post\n          newPost.dateMoment = moment(newPost.date)\n          newPost.dateUnix = newPost.dateMoment.unix()\n          newPost.bedtimeMoment = moment(newPost.date + ' ' + newPost.bedtime, 'YYYY-MM-DD HH:mm')\n          newPost.bedtimeUnix = newPost.bedtimeMoment.unix()\n          newPost.bedtimeSeconds = newPost.bedtimeMoment.diff(newPost.dateMoment)\n          newPost.eveningbrushstreak = 0;\n          newPost.morningbrushstreak = 0;\n          newPost.exercisedstreak = 0;\n          return newPost\n      })\n      newPosts.forEach((post, i) => {\n          const yesterdaysEveningBrushStreak = newPosts[i-1] ? newPosts[i-1].eveningbrushstreak : 0\n          const yesterdaysMorningBrushStreak = newPosts[i-1] ? newPosts[i-1].morningbrushstreak : 0\n          const yesterdaysexercisedstreak = newPosts[i-1] ? newPosts[i-1].exercisedstreak : 0\n\n          if(post.eveningbrush) {\n              post.eveningbrushstreak = yesterdaysEveningBrushStreak + 1\n          } else {\n              post.eveningbrushstreak = 0\n          }\n\n          if(post.morningbrush) {\n              post.morningbrushstreak = yesterdaysMorningBrushStreak + 1\n          } else {\n              post.morningbrushstreak = 0\n          }\n\n            if(post.exercised) {\n                post.exercisedstreak = yesterdaysexercisedstreak + 1\n            } else {\n                post.exercisedstreak = 0\n            }\n      })\n      \n      \n  \n      return (\n        <LineChart width={800} height={400} margin={{ top: 5, right: 0, bottom: 0, left: 50 }} data={newPosts}>\n            <XAxis         \n                dataKey = 'date'\n                tickFormatter = {(unixTime) => moment(unixTime).format('MMM-DD')}\n            />\n            <Tooltip />\n            <Legend verticalAlign=\"top\" height={36}/>\n            <YAxis \n                yAxisId='right'\n                orientation='right'\n                dataKey = 'bedtimeSeconds' \n                name = 'bedtime'   \n                tickFormatter = {(unixTime) => moment.utc(unixTime).format('HH:mm')}\n                stroke={colors[0]}\n                domain={[65000000, 90000000]}\n            />\n            <Line \n                name='Bed Time'\n                yAxisId='right'\n                type=\"monotone\" \n                dataKey=\"bedtimeSeconds\" \n                stroke={colors[0]}\n            />\n            <YAxis\n                yAxisId='left'\n                dataKey = 'eveningbrushstreak' \n                name = 'bedtime'   \n            />\n            <Line \n                name='Evening Brush'\n                yAxisId='left'\n                type=\"monotone\" \n                dataKey=\"eveningbrushstreak\" \n                stroke={colors[1]}\n            />\n            <Line \n                name='Morning Brush'\n                yAxisId='left'\n                type=\"monotone\" \n                dataKey=\"morningbrushstreak\" \n                stroke={colors[3]}\n            />\n            <Line \n                name='Exercise Daily'\n                yAxisId='left'\n                type=\"monotone\" \n                dataKey=\"exercisedstreak\" \n                stroke={colors[4]}\n            />\n        </LineChart>\n      )\n    }\n  }\n  \nexport default GoalChart","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport GoalChart from '../components/GoalChart'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const chartData = posts.map(post => {\n      return post.node.frontmatter\n    })\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <Bio />\n        <GoalChart posts={chartData} />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <div><small>{node.frontmatter.date}</small></div>\n              <div><small>M: {node.frontmatter.morningbrush ? 'Y': 'N'}, E: {node.frontmatter.eveningbrush ? 'Y' : 'N'}, W: {node.frontmatter.watergoal ? 'Y' : 'N'}, A: {node.frontmatter.avoidedalchohol ? 'Y' : 'N'}, Ex: {node.frontmatter.exercised ? 'Y' : 'N'}, Z: {node.frontmatter.bedtime}</small></div>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            morningbrush\n            eveningbrush\n            watergoal\n            avoidedalchohol\n            exercised\n            bedtime\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n            marginBottom: rhythm(-1),\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        {header}\n        {children}\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n            />\n            <p>\n              Written by <strong>{author}</strong>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}